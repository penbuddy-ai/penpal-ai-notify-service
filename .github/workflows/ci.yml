name: Build & Push (service) + Coolify Deploy

on:
  push:
    branches: [main, develop]
    tags: ['v*.*.*']

jobs:
  test:
    name: Unit & E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run unit tests
        run: npm test -- --runInBand

      - name: Run unit tests with coverage
        run: npm run test:cov -- --runInBand

      - name: Run E2E tests
        run: npm run test:e2e -- --runInBand

  build-and-push:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      OWNER: ${{ github.repository_owner }}
      IMAGE_NAME: ${{ github.event.repository.name }}
      REF_SLUG: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: MaksymilianCzadowski
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: tags
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v*.*.* ]]; then
            # Version tag (v1.2.3)
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version_tag=${VERSION}" >> $GITHUB_OUTPUT
            echo "is_version=true" >> $GITHUB_OUTPUT
          else
            # Branch push
            BRANCH_TAG="${REF_SLUG}-latest"
            echo "branch_tag=${BRANCH_TAG}" >> $GITHUB_OUTPUT
            echo "is_version=false" >> $GITHUB_OUTPUT
          fi
          SHA_TAG="sha-${GITHUB_SHA::7}"
          echo "sha_tag=${SHA_TAG}" >> $GITHUB_OUTPUT

      - name: Build & push image (version)
        if: steps.tags.outputs.is_version == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.version_tag }}
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.sha_tag }}
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest

      - name: Build & push image (branch)
        if: steps.tags.outputs.is_version == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.branch_tag }}
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.sha_tag }}

      - name: Trigger Coolify deploy (staging)
        if: github.ref_name == 'develop'
        run: |
          curl -fsSL -X POST \
            -H "Authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}" \
            "${{ secrets.COOLIFY_STAGING_WEBHOOK_URL }}"

      - name: Trigger Coolify deploy (production)
        if: github.ref_name == 'main'
        run: |
          curl -fsSL -X POST \
            -H "Authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}" \
            "${{ secrets.COOLIFY_PROD_WEBHOOK_URL }}"
